class ComplexNumber:
    def __init__(self, real, imaginary):
        self.real = float(real)
        self.imaginary = float(imaginary)
    
    def __str__(self):
        if self.imaginary < 0:
            return f"{self.real} - {abs(self.imaginary)}i"
        else:
            return f"{self.real} + {self.imaginary}i"
    
    def __add__(self, other):
        if isinstance(other, ComplexNumber):
            real = self.real + other.real
            imaginary = self.imaginary + other.imaginary
            return ComplexNumber(real, imaginary)
        else:
            raise ValueError("Cannot add complex number with non-complex number")
    
    def __sub__(self, other):
        if isinstance(other, ComplexNumber):
            real = self.real - other.real
            imaginary = self.imaginary - other.imaginary
            return ComplexNumber(real, imaginary)
        else:
            raise ValueError("Cannot subtract complex number with non-complex number")
    
    def __mul__(self, other):
        if isinstance(other, ComplexNumber):
            real = self.real * other.real - self.imaginary * other.imaginary
            imaginary = self.real * other.imaginary + self.imaginary * other.real
            return ComplexNumber(real, imaginary)
        else:
            raise ValueError("Cannot multiply complex number with non-complex number")
    
    def __truediv__(self, other):
        if isinstance(other, ComplexNumber):
            denominator = other.real ** 2 + other.imaginary ** 2
            if denominator != 0:
                real = (self.real * other.real + self.imaginary * other.imaginary) / denominator
                imaginary = (self.imaginary * other.real - self.real * other.imaginary) / denominator
                return ComplexNumber(real, imaginary)
            else:
                raise ValueError("Division by zero not allowed")
        else:
            raise ValueError("Cannot divide complex number by non-complex number")
